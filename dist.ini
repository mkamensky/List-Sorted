name    = List-Sorted
author  = Moshe Kamensky <kamensky@cpan.org>
license = Perl_5
copyright_holder = Moshe Kamensky
copyright_year   = 2013

[Git::NextVersion]
[Git::GatherDir]
include_untracked = 1
[@Filter]
-bundle = @Basic
-remove = GatherDir
-remove = Readme
-remove = ExtraTests
-remove = UploadToCPAN
[AutoPrereqs]
[PkgVersion]
[PodWeaver]
[GithubMeta]
[MetaProvides::Package]
meta_noindex = 1
[ReadmeAnyFromPod / MarkdownInRoot ]
[InstallGuide]
[Bugtracker]

; t tests
[Test::Compile]     ; make sure .pm files all compile
fake_home = 1       ; fakes $ENV{HOME} just in case

[Test::MinimumVersion]
max_target_perl = 5.010

[Test::ReportPrereqs] ; show prereqs in automated test output

; xt tests
;[Test::PodSpelling] ; xt/author/pod-spell.t
;[Test::Perl::Critic] ; xt/author/critic.t
[MetaTests]         ; xt/release/meta-yaml.t
[PodSyntaxTests]    ; xt/release/pod-syntax.t
[PodCoverageTests]  ; xt/release/pod-coverage.t
[Test::Portability] ; xt/release/portability.t (of file name)
options = test_one_dot = 0
[Test::Version]     ; xt/release/test-version.t

[MetaJSON]
[CPANFile]
[CopyFilesFromBuild]
copy = cpanfile

[Git::CommitBuild]

; before release
[Git::Check]        ; ensure all files checked in
allow_dirty = dist.ini
allow_dirty = Changes
allow_dirty = cpanfile

[CheckMetaResources]     ; ensure META has 'resources' data
[CheckPrereqsIndexed]    ; ensure prereqs are on CPAN
skips = integer
[CheckChangesHasContent] ; ensure Changes has been updated
[CheckExtraTests]   ; ensure xt/ tests pass

[FakeRelease]

; after release
[Git::Commit / Commit_Dirty_Files] ; commit Changes (as released)

[Git::Tag]          ; tag repo with custom tag

; NextRelease acts *during* pre-release to write $VERSION and
; timestamp to Changes and  *after* release to add a new {{$NEXT}}
; section, so to act at the right time after release, it must actually
; come after Commit_Dirty_Files but before Commit_Changes in the
; dist.ini.  It will still act during pre-release as usual
[NextRelease]
 
[Git::Commit / Commit_Changes] ; commit Changes (for new dev)
 
[Git::Push]         ; push repo to remote

